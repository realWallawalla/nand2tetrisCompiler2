function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto TRUE1
goto FALSE1
label TRUE1
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto ELSE1
label FALSE1
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label ELSE1
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto TRUE2
goto FALSE2
label TRUE2
push this 4
push this 5
add
pop this 4
goto ELSE2
label FALSE2
push this 4
push this 6
add
pop this 4
push this 9
if-goto TRUE3
goto FALSE3
label TRUE3
push this 7
if-goto TRUE4
goto FALSE4
label TRUE4
push this 0
push constant 4
add
pop this 0
goto ELSE4
label FALSE4
push this 1
push constant 4
add
pop this 1
label ELSE4
goto ELSE3
label FALSE3
push this 7
if-goto TRUE5
goto FALSE5
label TRUE5
push this 0
push constant 4
sub
pop this 0
goto ELSE5
label FALSE5
push this 1
push constant 4
sub
pop this 1
label ELSE5
label ELSE3
label ELSE2
push this 8
if-goto TRUE6
goto FALSE6
label TRUE6
push this 7
if-goto TRUE7
goto FALSE7
label TRUE7
push this 1
push constant 4
add
pop this 1
goto ELSE7
label FALSE7
push this 0
push constant 4
add
pop this 0
label ELSE7
goto ELSE6
label FALSE6
push this 7
if-goto TRUE8
goto FALSE8
label TRUE8
push this 1
push constant 4
sub
pop this 1
goto ELSE8
label FALSE8
push this 0
push constant 4
sub
pop this 0
label ELSE8
label ELSE6
push this 0
push this 10
gt
not
if-goto TRUE9
goto FALSE9
label TRUE9
push constant 1
pop this 14
push this 10
pop this 0
label FALSE9
push this 0
push this 11
lt
not
if-goto TRUE10
goto FALSE10
label TRUE10
push constant 2
pop this 14
push this 11
pop this 0
label FALSE10
push this 1
push this 12
gt
not
if-goto TRUE11
goto FALSE11
label TRUE11
push constant 3
pop this 14
push this 12
pop this 1
label FALSE11
push this 1
push this 13
lt
not
if-goto TRUE12
goto FALSE12
label TRUE12
push constant 4
pop this 14
push this 13
pop this 1
label FALSE12
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto TRUE13
goto FALSE13
label TRUE13
push constant 10
pop local 4
goto ELSE13
label FALSE13
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto TRUE14
goto FALSE14
label TRUE14
push constant 20
pop local 4
goto ELSE14
label FALSE14
push constant 5
pop local 4
label ELSE14
label ELSE13
push this 14
push constant 1
eq
if-goto TRUE15
goto FALSE15
label TRUE15
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto ELSE15
label FALSE15
push this 14
push constant 2
eq
if-goto TRUE16
goto FALSE16
label TRUE16
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto ELSE16
label FALSE16
push this 14
push constant 3
eq
if-goto TRUE17
goto FALSE17
label TRUE17
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto ELSE17
label FALSE17
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label ELSE17
label ELSE16
label ELSE15
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
